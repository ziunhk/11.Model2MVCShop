<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 					

<mapper namespace="PurchaseMapper">
	
<!-- purchase 관련하여 필요한 transaction Table 조회 : purchase(VO)는 user domain 객체와 product domain 객체를 가진다. -->

	<resultMap id="purchaseSelectMap" type="purchase">
	
		<result property="tranNo" column="tran_no" jdbcType="NUMERIC"/>
		<result property="paymentOption" column="payment_option" jdbcType="CHAR"/>
		<result property="receiverName" column="receiver_name" jdbcType="VARCHAR"/>
		<result property="receiverPhone" column="receiver_phone" jdbcType="VARCHAR"/>
		<result property="divyAddr" column="demailaddr" jdbcType="VARCHAR"/> <!-- column 부분 수정 dlvy_addr ==> demailaddr -->
		<result property="divyRequest" column="dlvy_request" jdbcType="VARCHAR"/>
		<result property="tranCode" column="tran_status_code" jdbcType="CHAR"/>
		<result property="orderDate" column="order_data" jdbcType="DATE"/>
		<result property="divyDate" column="dlvy_date" jdbcType="VARCHAR"/>
		
		
		<association property="purchaseProd"  javaType="product">
			<id property="prodNo" column="prod_no" jdbcType="NUMERIC"/>
			<result property="prodName" column="prod_name" jdbcType="VARCHAR"/>
			<result property="prodDetail" column="prod_detail" jdbcType="VARCHAR"/>
			<result property="manuDate" column="manufacture_day" jdbcType="VARCHAR"/>
			<result property="price" column="price" jdbcType="NUMERIC"/>
			<result property="fileName" column="image_file" jdbcType="VARCHAR"/>
			<result property="regDate" column="prod_reg_date" jdbcType="DATE"/>
			<result property="proTranCode" column="tran_status_code" jdbcType="VARCHAR"/>
		</association>
		
		
		<association property="buyer"  javaType="user">
			<id property="userId" column="buyer_id" jdbcType="VARCHAR"/>
			<result property="userName" column="user_name" jdbcType="VARCHAR"/>
			<result property="password" column="password" jdbcType="VARCHAR"/>
			<result property="role" column="role" jdbcType="VARCHAR"/>
			<result property="ssn" column="ssn" jdbcType="VARCHAR"/>
			<result property="phone" column="cell_phone" jdbcType="VARCHAR"/>
			<result property="addr" column="addr" jdbcType="VARCHAR"/>
			<result property="email" column="email" jdbcType="VARCHAR"/>
			<result property="regDate" column="user_reg_date" jdbcType="DATE"/>
		</association>
	
	</resultMap>
	
	
	<insert id="addPurchase" parameterType="purchase">
		INSERT 
		INTO transaction(tran_no, prod_no, buyer_id, payment_option, receiver_name, receiver_phone, demailaddr, dlvy_request, tran_status_code, order_data, dlvy_date)
		VALUES (
					seq_transaction_tran_no.NEXTVAL,
					#{purchaseProd.prodNo:INTEGER},
					#{buyer.userId:VARCHAR},
					#{paymentOption:CHAR},
					#{receiverName:VARCHAR},
					#{receiverPhone:VARCHAR},
					#{divyAddr:VARCHAR},
					#{divyRequest:VARCHAR},
					#{tranCode:CHAR},
					SYSDATE,
					TO_DATE(#{divyDate:DATE}, 'yy/mm/dd') )
	</insert>
		
	
	<select id="getPurchase" parameterType="int" resultMap="purchaseSelectMap">
		SELECT
			tran_no, 
			buyer_id, 
			prod_no, 
			payment_option, 
			receiver_name, 
			receiver_phone, 
			demailaddr, 
			dlvy_request, 
			tran_status_code, 
			order_data, 
			dlvy_date 
		FROM transaction 
			WHERE tran_no = #{tranNo:INTEGER}
	</select>
	
	
	<select id="getPurchase2" parameterType="int" resultMap="purchaseSelectMap">
		SELECT
			tran_no, 
			buyer_id, 
			prod_no, 
			payment_option, 
			receiver_name, 
			receiver_phone, 
			demailaddr, 
			dlvy_request, 
			tran_status_code, 
			order_data, 
			dlvy_date 
		FROM transaction 
			WHERE prod_no = #{prodNo:INTEGER}
	</select>
	
	
	<update id="updatePurchase" parameterType="purchase">
		UPDATE transaction SET 
		payment_option = #{paymentOption:VARCHAR},
		 receiver_name = #{receiverName:VARCHAR},
		  receiver_phone = #{receiverPhone:NUMERIC},
		   demailaddr = #{divyAddr:VARCHAR},
		    dlvy_request = #{divyRequest:VARCHAR},
		     dlvy_date = TO_DATE(#{divyDate:DATE}, 'yyyy/mm/dd') 
		     	WHERE tran_no	= #{tranNo} 
	</update> 
	<!-- dlvy_date = TO_DATE(#{divyDate:DATE}, 'yy/mm/dd')  -->
	
	
	<update id="updateTranCode" parameterType="int"> 
		UPDATE transaction SET 
			tran_status_code = '2' 
		WHERE tran_no = #{tranNo:INTEGER}
	</update> <!-- 일반유저의 경우 배송이 완료되면, 배송완료 버튼을....만들어보자.... -->
	
	
	<!-- 혹시몰라서...남겨둠... -->
	<delete id="removePurchase" parameterType="int">
		DELETE 
		FROM transaction 
		WHERE tran_no = #{tranNo}
	</delete>
	
	
	<!-- getPurchaseList에서 buyerId가 필요 자신의 id로 구매한 것만 출력  -->
	<!-- <![CDATA[<=]]> 의 의미는 CDATA 안의  '<='를 그냥 있는 그대로 받아들이는 것  -->
	<select id="getPurchaseList" parameterType="map" resultMap="purchaseSelectMap">
  		SELECT *
  		FROM ( SELECT inner_table.*, ROWNUM AS row_seq 
  						FROM ( SELECT 
  									t.tran_no, 
  									p.prod_no, 
  									t.order_data, 
  									t.receiver_phone, 
  									t.tran_status_code 
									FROM transaction t, product p 
									WHERE t.prod_no = p.prod_no 
									AND t.buyer_id = #{buyerId} 
									ORDER BY tran_no  ) inner_table 
  						WHERE ROWNUM <![CDATA[<=]]> #{search.currentPage}*#{search.pageSize} )
  		WHERE row_seq BETWEEN (#{search.currentPage}-1)*#{search.pageSize}+1
  		AND #{search.currentPage}*#{search.pageSize}
	</select>
	
	
	 <!-- only for 'admin' menu -->
	<select  id="getSaleList"  parameterType="search"	resultMap="purchaseSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT 
	  										t.tran_no, 
	  										t.prod_no, 
	  										p.prod_name, 
	  										t.buyer_id, 
	  										t.payment_option, 
	  										t.receiver_name, 
	  										t.receiver_phone, 
	  										t.demailaddr, 
	  										t.dlvy_request, 
	  										t.tran_status_code, 
	  										t.order_data, 
	  										t.dlvy_date 
											FROM transaction t, product p 
											WHERE t.prod_no = p.prod_no 
											<if test="searchCondition != null">
												<where>
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				AND t.tran_no = #{searchKeyword}
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				AND t.prod_no = #{searchKeyword}
													</if>
												</where>
											</if>
											ORDER BY t.tran_no ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 
	 
	 <!-- only for 'admin' menu
	<select  id="getSaleList"  parameterType="search"	resultMap="purchaseSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT 
	  										tran_no, 
	  										prod_no, 
	  										buyer_id, 
	  										payment_option, 
	  										receiver_name, 
	  										receiver_phone, 
	  										demailaddr, 
	  										dlvy_request, 
	  										tran_status_code, 
	  										order_data, 
	  										dlvy_date 
											FROM transaction 
											<if test="searchCondition != null">
												<where>
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				tran_no = #{searchKeyword}
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				prod_no = #{searchKeyword}
													</if>
												</where>
											</if>
											ORDER BY tran_no ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select> -->
	 
	 <!-- 유저의 경우 ->  select * from where userId like '{userId}'  -->
	 <!-- 관리자의 경우 ->  select * from where userId like '%'  -->
	 <!-- SQL : SELECT ROW Count -->
	<select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*) 
	  	FROM(	SELECT 
		  				tran_no , 
		  				prod_no, 
		  				buyer_id, 
		  				payment_option, 
		  				receiver_name, 
		  				receiver_phone, 
		  				demailaddr, 
		  				dlvy_request, 
		  				tran_status_code, 
		  				order_data, 
		  				dlvy_date
						FROM transaction 
						<if test="searchCondition != null">
							<where>
								<if test="searchCondition == 0 and searchKeyword !='' ">
						 			tran_no = #{searchKeyword}
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
						 			prod_no = #{searchKeyword}
								</if>
							</where>
						</if> ) countTable	
	</select>
	
</mapper>